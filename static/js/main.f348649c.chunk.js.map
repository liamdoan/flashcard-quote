{"version":3,"sources":["Flashcard.js","FlashcardList.js","App.js","index.js"],"names":["Flashcard","flashcard","useState","flip","setFlip","height","setHeight","frontEl","useRef","backEl","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","useEffect","question","answer","options","window","addEventListener","removeEventListener","className","style","onClick","ref","map","option","FlashcardList","flashcards","id","App","setFlashcards","categories","setCategories","categoryEl","amountEl","decodeString","str","textArea","document","createElement","innerHTML","value","axios","get","then","res","data","trivia_categories","onSubmit","e","preventDefault","params","amount","category","results","questionItem","index","correct_answer","incorrect_answers","a","Date","now","sort","random","console","log","action","htmlFor","name","type","min","step","defaultValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f348649c.chunk.js","sourcesContent":["// flashcard component\r\n\r\nimport React, {useState, useEffect, useRef} from 'react'\r\n\r\nconst Flashcard = ({flashcard}) => {\r\n\r\n    const [flip, setFlip] = useState(false)\r\n    const [height, setHeight] = useState('initial')\r\n\r\n    const frontEl = useRef()\r\n    const backEl = useRef()\r\n\r\n    function setMaxHeight() {\r\n        const frontHeight = frontEl.current.getBoundingClientRect().height\r\n        const backHeight = backEl.current.getBoundingClientRect().height\r\n\r\n        setHeight(Math.max(frontHeight, backHeight, 100))\r\n    }\r\n\r\n    useEffect(setMaxHeight, [flashcard.question, flashcard.answer, flashcard.options])\r\n    \r\n    useEffect(() => {\r\n        window.addEventListener('resize', setMaxHeight)\r\n        return () => window.removeEventListener('resize', setMaxHeight)\r\n    })\r\n\r\n    return (\r\n        <div\r\n            className = {`card ${flip ? 'flip' : ''}`}\r\n            // have a class of CARD for every flashcard\r\n            // and if FLIP is true it will have class FLIP, otherwise none\r\n            style={{height: height}}\r\n            onClick = {() => setFlip(!flip)}>\r\n\r\n            <div className=\"front\" ref={frontEl}>\r\n                {flashcard.question}          \r\n                <div className=\"flashcard-options\">\r\n                    {flashcard.options.map(option => {\r\n                        return <div className=\"flashcard-option\">{option}</div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"back\" ref={backEl}>\r\n                {flashcard.answer}\r\n            </div>\r\n\r\n            {/* {flip ? flashcard.answer : flashcard.question} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Flashcard\r\n\r\n// 18.51 to flip","import React from 'react'\r\nimport Flashcard from './Flashcard'\r\n\r\nconst FlashcardList = ({flashcards}) => {\r\n    return (\r\n        <div className=\"card-grid\">\r\n            {flashcards.map(flashcard => {\r\n                return <Flashcard flashcard={flashcard} \r\n                        key={flashcard.id}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FlashcardList\r\n","import React, {useState, useEffect, useRef} from 'react'\nimport FlashcardList from './FlashcardList';\nimport './App.css'\nimport axios from 'axios'\n\n\nfunction App() {\n\n  const [flashcards, setFlashcards] = useState([])\n  const [categories, setCategories] = useState([])\n\n  const categoryEl = useRef()\n  const amountEl = useRef()\n\n  useEffect(() => {\n    axios\n      .get('https://opentdb.com/api_category.php')\n      .then(res => {\n        setCategories(res.data.trivia_categories)\n      })\n  }, [])\n\n  useEffect (() => {\n    \n  }, [])\n\n  function decodeString(str) {\n    const textArea = document.createElement('textarea')\n    textArea.innerHTML = str\n    return textArea.value\n  }\n\n  function handleSumbit(e) {\n    e.preventDefault()\n\n    axios\n      .get ('https://opentdb.com/api.php', {\n        params: {\n          amount: amountEl.current.value,\n          category: categoryEl.current.value\n        }\n      })\n      .then(res => {\n        setFlashcards(\n          res.data.results.map((questionItem, index) => {\n\n          const answer = decodeString(questionItem.correct_answer)\n          const options = [\n            ...questionItem.incorrect_answers.map(a => decodeString(a)),\n             answer]\n\n          return {\n            id: `${index}-${Date.now()}`,\n            question: decodeString(questionItem.question),\n            answer: answer,\n            // questionItem.correct_answer,\n            options: options.sort(() => Math.random() - .5)\n            // creating random order for options\n          }\n        }))\n        console.log(res.data)\n      })\n  }\n\n  return (\n    <>\n      <form className=\"header\" onSubmit={handleSumbit} action=\"\">\n        <div className=\"form-group\">\n          <label htmlFor=\"category\">Category</label>\n          <select id=\"caterogry\" ref={categoryEl}>\n              {categories.map(category => {\n              return <option value={category.id} key={category.id}>{category.name}</option>\n              })}\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"amount\">Number of Questions</label>\n            <input type=\"numnber\" id=\"amount\" min=\"1\" step=\"1\" defaultValue={10} ref={amountEl}/>\n        </div>\n\n        <div className=\"form-group\">\n              <button className=\"btn\">Generate</button>\n        </div>\n      </form>\n\n      <div className=\"container\">\n      <FlashcardList flashcards={flashcards}/>\n      </div>\n    </>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}